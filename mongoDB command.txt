제이슨 형태의 디비
use 디비명;
show dbs; 티비 목록
db.sample.insert({"name":"sample"}); 제이슨 방식으로 생성
db.dropDatabase() //디비삭제
db.colletion_name.find() // 목록보기
db.colletion_name.find().pretty() //편리하게 보기 위에꺼보다 편하게 나옴
db.colletion_name.find({ 값 }) //조건의 해당하는 목록보기
dp.people.insert({"name":"velopert"})
show collections // 디비 목록보기

db.createCollection(name,[options]) // 컬렉션 생성
options
capped 컬렉션 사이즈고정하기위해
db.colletion_name.drop(); 컬렉션제거

두개이상 데이터 추가할경우 배열 형식 ( [ {"name":"a","author":"vel"} , { ... } ] )

db.colletions_name.remove({"author" : "Velopert"},true) //Document 제거
db.number.find().skip() // 스킵하기
db.people.update({name: "Charlie"},
{$put: {skills:{$n:["angularjs","java"] } } } );
비교연산자
$eq 일치하는지
$gt 주어진 값보다 큰 값
$gte 주어진 값보다 크거나 같을 때
$lt 주어진 값보다 작을때
$lte 주어진 값보다 작거나 같을때
$ne 주어진 값보다 일치하지 않는 값
$in 주어진 배열 안에 속하는 값
$nin 주어진 배열 안에 속하지 않는 값
$or
$and
$not
$nor
$elemMatch // subdocument(embedded document)배열을 쿼리할때 사용합니다.
정규식
i // 대소문자 무시
m 정규식에서 anchor(^)를 사용 할 때 값에 \n이 있다면 무시
x 정규식 안에있는 whitespace 모두 무시
s  dot(.)사용 할때 \n을 포함해서 매치